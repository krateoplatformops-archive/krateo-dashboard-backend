app:
  title: Project Kerberus Backend
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  baseUrl: http://localhost:7000
  listen:
    port: 7000
  csp:
    connect-src: ["'self'", "http:", "https:"]
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      #ssl: require # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      #ca: # if you have a CA file and want to verify it you can uncomment this section
      #  $file: <file-path>/ca/server.crt
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  "/argocd/api":
    target: https://argocd.projectx.kiratech.net
    changeOrigin: true
    secure: false
    headers:
      Cookie:
        $env: ARGOCD_AUTH_TOKEN

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: "local" # Alternatives - 'external'
  generator:
    runIn: "docker" # Alternatives - 'local'
  publisher:
    type: "local" # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    microsoft:
      development:
        clientId: ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}

scaffolder:
  github:
    token: ${GITHUB_TOKEN}
    visibility: public # or 'internal' or 'private'

catalog:
  rules:
    - allow: [Component, System, API, Group, User, Resource, Location]
  locations:
    # Backstage example components
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml
    # Backstage example systems
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml
    # Backstage example APIs
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml
    # Backstage example resources
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml
    # Backstage example organization groups
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml
    # Backstage example templates
    # - type: url
    #   target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
    #   rules:
    #     - allow: [Template]
    # - type: url
    #   target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/springboot-grpc-template/template.yaml
    #   rules:
    #     - allow: [Template]
    # - type: url
    #   target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
    #   rules:
    #     - allow: [Template]
    # - type: url
    #   target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/docs-template/template.yaml
    #   rules:
    #     - allow: [Template]
    - type: url
      target: https://github.com/projectkerberus/gcp-stack-template/blob/main/template-beta.yaml
      rules:
        - allow: [Template]

kubernetes:
  serviceLocatorMethod:
    type: "multiTenant"
  clusterLocatorMethods:
    - type: "config"
      clusters:
        - url: http://127.0.0.1:9999
          name: minikube
          authProvider: "serviceAccount"
          skipTLSVerify: false
          serviceAccountToken: ${K8S_MINIKUBE_TOKEN}
        - url: http://127.0.0.2:9999
          name: aws-cluster-1
          authProvider: "aws"
