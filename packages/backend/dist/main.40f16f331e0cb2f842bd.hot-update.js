"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "main";
exports.ids = null;
exports.modules = {

/***/ "./src/plugins/scaffolder/actions/ro-insiel.ts":
/*!*****************************************************!*\
  !*** ./src/plugins/scaffolder/actions/ro-insiel.ts ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRoInsielAction\": () => (/* binding */ createRoInsielAction)\n/* harmony export */ });\n/* harmony import */ var _backstage_plugin_scaffolder_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @backstage/plugin-scaffolder-backend */ \"../../plugins/scaffolder-backend/src/index.ts\");\n/* harmony import */ var _backstage_backend_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @backstage/backend-common */ \"../backend-common/src/index.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () { var enterModule = (__webpack_require__(/*! react-hot-loader */ \"react-hot-loader\").enterModule); enterModule && enterModule(module); })();/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nconst git = __webpack_require__(/*! isomorphic-git */ \"isomorphic-git?7761\");\nconst http = __webpack_require__(/*! isomorphic-git/http/node */ \"isomorphic-git/http/node?5755\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst nunjucks = __webpack_require__(/*! nunjucks */ \"nunjucks\");\nconst { Octokit } = __webpack_require__(/*! @octokit/rest */ \"@octokit/rest?e034\");\n\nconst util = __webpack_require__(/*! util */ \"util\");\n\nconst getAllFiles = (dirPath, arrayOfFiles) => {\n  const files = fs.readdirSync(dirPath);\n\n  arrayOfFiles = arrayOfFiles || [];\n\n  files.forEach((file) => {\n    if (file !== '.git') {\n      if (fs.statSync(dirPath + '/' + file).isDirectory()) {\n        arrayOfFiles = getAllFiles(dirPath + '/' + file, arrayOfFiles);\n      } else {\n        arrayOfFiles.push(path.join(dirPath, '/', file));\n      }\n    }\n  });\n\n  return arrayOfFiles;\n};\n\nconst createRoInsielAction = () => {\n  return (0,_backstage_plugin_scaffolder_backend__WEBPACK_IMPORTED_MODULE_0__.createTemplateAction)\n\n\n\n({\n    id: 'krateo:ro-insiel',\n    schema: {\n      input: {\n        required: ['host', 'component_id', 'gitHubUrl'],\n        type: 'object',\n        properties: {\n          host: {\n            type: 'string',\n            title: 'Host',\n            description: 'Host',\n          },\n          component_id: {\n            type: 'string',\n            title: 'Component Id',\n            description: 'Component Id',\n          },\n          gitHubUrl: {\n            type: 'string',\n            title: 'GitHub Url',\n            description: 'GitHub Url',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const fullUrl = `https://${ctx.input.host}`;\n      const url = new URL(fullUrl);\n      const owner = url.searchParams.get('owner');\n      const repo = url.searchParams.get('repo');\n      const base = url.origin;\n      const repoURL = `${base}/${owner}/${repo}`;\n\n      ctx.logger.info(JSON.stringify(ctx.baseUrl));\n\n      const templateUrl = ctx.baseUrl.replace('/tree/main/', '');\n\n      const workDir = await ctx.createTemporaryDirectory();\n      const helmDir = (0,_backstage_backend_common__WEBPACK_IMPORTED_MODULE_1__.resolveSafeChildPath)(workDir, 'helm-chart');\n\n      ctx.logger.info(`Created temporary directory: ${workDir}`);\n      ctx.logger.info(`Helm directory: ${helmDir}`);\n\n      await git.clone({\n        fs,\n        http,\n        dir: workDir,\n        url: templateUrl,\n        onAuth: () => ({ username: process.env.GITHUB_TOKEN }),\n        ref: 'main',\n        singleBranch: true,\n        depth: 1,\n      });\n\n      // template\n      const files = getAllFiles(helmDir, null);\n      nunjucks.configure(helmDir, {\n        noCache: true,\n        autoescape: true,\n        tags: { variableStart: '${{' },\n      });\n      files.forEach((f) => {\n        const original = fs.readFileSync(f, { encoding: 'base64' });\n\n        if (original.length > 0) {\n          ctx.logger.info(`Processing file: ${f}`);\n          const modified = nunjucks.render(f.replace(`${helmDir}/`, ''), {\n            component_id: ctx.input.component_id,\n          });\n\n          if (original !== Buffer.from(modified, 'utf-8').toString('base64')) {\n            fs.writeFileSync(f, modified, { encoding: 'utf-8' });\n          }\n        }\n      });\n\n      // check if is organization\n      const octokit = new Octokit({\n        auth: process.env.GITHUB_TOKEN,\n        baseUrl: ctx.input.gitHubUrl,\n      });\n      let isOrganization = false;\n      try {\n        await octokit.rest.repos.listForOrg({\n          org: owner,\n        });\n        isOrganization = true;\n        ctx.logger.info(`Destination repo is org`);\n      } catch (err) {\n        ctx.logger.info(`Destination repo is not org`);\n      }\n\n      // push repo\n      ctx.logger.info(`${repoURL}-hc`);\n      if (isOrganization) {\n        await octokit.rest.repos.createInOrg({\n          org: owner,\n          name: `${repo}-hc`,\n        });\n        await octokit.rest.repos.createInOrg({\n          org: owner,\n          name: `${repo}-keptn`,\n        });\n      } else {\n        await octokit.rest.repos.createForAuthenticatedUser({\n          name: `${repo}-hc`,\n        });\n        await octokit.rest.repos.createForAuthenticatedUser({\n          name: `${repo}-keptn`,\n        });\n      }\n      ctx.logger.info(`Created repository: ${repoURL}-hc`);\n      ctx.logger.info(`Created repository: ${repoURL}-keptn`);\n\n      await git.init({ fs, dir: helmDir, defaultBranch: 'main' });\n      ctx.logger.info(`Init`);\n      await git.add({ fs, dir: helmDir, filepath: '.' });\n      ctx.logger.info(`Add *`);\n      await git.commit({\n        fs,\n        dir: helmDir,\n        author: {\n          name: 'Scaffolder',\n          email: '',\n        },\n        message: 'initial commit',\n      });\n      ctx.logger.info(`Commit`);\n      await git.addRemote({\n        fs,\n        dir: helmDir,\n        remote: 'origin',\n        url: `${repoURL}-hc.git`,\n      });\n      ctx.logger.info(`Add remote ${repoURL}-hc.git`);\n      await git\n        .push({\n          fs,\n          http,\n          dir: helmDir,\n          remote: 'origin',\n          ref: 'main',\n          onAuth: () => ({ username: process.env.GITHUB_TOKEN }),\n          onProgress: (state) => {\n            try {\n              ctx.logger.info(`Pushing ${state.phase}`);\n            } catch (e) {\n              ctx.logger.error(e);\n            }\n          },\n        })\n        .catch((err) => {\n          ctx.logger.error(`‚ùå Push progress failed: ${err}`);\n        });\n      ctx.logger.info(`Push`);\n\n      ctx.logger.info(`Well done, pushed successfully!`);\n    },\n  });\n};\n\n;(function () {\n  var reactHotLoader = (__webpack_require__(/*! react-hot-loader */ \"react-hot-loader\")[\"default\"]);\n  var leaveModule = (__webpack_require__(/*! react-hot-loader */ \"react-hot-loader\").leaveModule);\n  if (!reactHotLoader) {\n    return;\n  }\n  reactHotLoader.register(git, \"git\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(http, \"http\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(fs, \"fs\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(path, \"path\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(nunjucks, \"nunjucks\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(Octokit, \"Octokit\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(util, \"util\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(getAllFiles, \"getAllFiles\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  reactHotLoader.register(createRoInsielAction, \"createRoInsielAction\", \"/Users/maurosala/Dev/github/krateoplatformops/krateo-dashboard-backend/packages/backend/src/plugins/scaffolder/actions/ro-insiel.ts\");\n  leaveModule(module);\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/plugins/scaffolder/actions/ro-insiel.ts\n");

/***/ })

};
exports.runtime =
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("76e9f6d16bab0eed651c")
/******/ })();
/******/ 
/******/ }
;